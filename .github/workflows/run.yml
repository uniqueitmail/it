name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip
        Remove-Item ngrok.zip -Force

    - name: Update Ngrok
      run: |
        # Download the latest ngrok version
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok_latest.zip
        Expand-Archive ngrok_latest.zip
        Remove-Item ngrok_latest.zip -Force
        # Replace the existing ngrok executable with the latest version
        Copy-Item -Path ".\ngrok\ngrok.exe" -Destination ".\ngrok_latest\ngrok.exe" -Force
        Remove-Item -Path ".\ngrok" -Recurse -Force
        Rename-Item -Path ".\ngrok_latest" -NewName "ngrok"

    - name: Authenticate Ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable TS
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
